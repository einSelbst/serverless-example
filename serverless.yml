service: ${file(config.json):name}

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk
        - serverless
    packager: 'yarn'

package:
  include:
    - src/**
    - node_modules/**
  exclude:
    - .git/**
    - .env
    - docker-compose.yml
    - Dockerfile
    - LICENSE
    - README.md
    - package.json
    - package-lock.json
    - tests/**
    - yarn.lock

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-central-1
  environment: ${file(env.yml):${self:provider.stage}}
  iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "s3:ListBucket"
         - "s3:GetObject"
         - "s3:GetObjectAcl"
       Resource:
         Fn::Join:
           - ""
           -  - "arn:aws:s3:::"
              - ${file(config.json):sourceBucket}
              - "/"
              - ${file(config.json):sourcePrefix}
              - "*"
    -  Effect: "Allow"
       Action:
         - "s3:ListBucket"
         - "s3:PutObject"
         - "s3:DeleteObject"
         - "s3:GetObjectAcl"
         - "s3:ListBucketMultipartUploads"
         - "s3:ListMultipartUploadParts"
         - "s3:PutObject"
         - "s3:PutObjectAcl"
         - "s3:PutObjectTagging"
         - "s3:PutObjectVersionAcl"
         - "s3:PutObjectVersionTagging"
       Resource:
         Fn::Join:
           - ""
           -  - "arn:aws:s3:::"
              - ${file(config.json):destinationBucket}
              - "/"
              - ${file(config.json):destinationPrefix}
              - "*"

functions:
  sharpImage:
    description: Resizes images
    memorySize: 1024
    timeout: 30
    handler: handler.processImage
